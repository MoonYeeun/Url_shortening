{
  "{\"sourceRoot\":\"/Users/yeeun/url_short/server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/yeeun/url_short/server\",\"filename\":\"/Users/yeeun/url_short/server/src/main.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/yeeun/url_short/server\",\"plugins\":[],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/yeeun/url_short/server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/yeeun/url_short/server",
      "filename": "/Users/yeeun/url_short/server/src/main.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/yeeun/url_short/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/yeeun/url_short/server/src/main.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/yeeun/url_short/server/src/main.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/yeeun/url_short/server/src",
        "sourceFileName": "main.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst db = require('../module/db'); //url redirect\n\n\nrouter.get('/:id', async (req, res, next) => {\n  let input = req.params.id;\n  if (input == null) res.redirect('http://localhost:3000/');else {\n    console.log(input);\n    var url = 'localhost:8080/' + input;\n    var query = {\n      'short_url': url\n    };\n\n    try {\n      const result = await db.find(query);\n      console.log(`Connected to MongoDB: GET`);\n\n      if (result._id) {\n        console.log(result);\n        origin_url = 'https://' + result.origin_url;\n        res.redirect(origin_url);\n      }\n    } catch (err) {\n      console.log(err);\n      res.status(404).send({\n        message: \"Not found\"\n      });\n    }\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJkYiIsImdldCIsInJlcSIsInJlcyIsIm5leHQiLCJpbnB1dCIsInBhcmFtcyIsImlkIiwicmVkaXJlY3QiLCJjb25zb2xlIiwibG9nIiwidXJsIiwicXVlcnkiLCJyZXN1bHQiLCJmaW5kIiwiX2lkIiwib3JpZ2luX3VybCIsImVyciIsInN0YXR1cyIsInNlbmQiLCJtZXNzYWdlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmOztBQUNBLE1BQU1DLEVBQUUsR0FBR0gsT0FBTyxDQUFDLGNBQUQsQ0FBbEIsQyxDQUVBOzs7QUFDQUMsTUFBTSxDQUFDRyxHQUFQLENBQVcsTUFBWCxFQUFtQixPQUFPQyxHQUFQLEVBQVlDLEdBQVosRUFBa0JDLElBQWxCLEtBQTJCO0FBQzdDLE1BQUlDLEtBQUssR0FBR0gsR0FBRyxDQUFDSSxNQUFKLENBQVdDLEVBQXZCO0FBQ0EsTUFBR0YsS0FBSyxJQUFJLElBQVosRUFBa0JGLEdBQUcsQ0FBQ0ssUUFBSixDQUFhLHdCQUFiLEVBQWxCLEtBQ0k7QUFDSEMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlMLEtBQVo7QUFDQSxRQUFJTSxHQUFHLEdBQUcsb0JBQW9CTixLQUE5QjtBQUNBLFFBQUlPLEtBQUssR0FBRztBQUFDLG1CQUFhRDtBQUFkLEtBQVo7O0FBQ0EsUUFBSTtBQUNILFlBQU1FLE1BQU0sR0FBRyxNQUFNYixFQUFFLENBQUNjLElBQUgsQ0FBUUYsS0FBUixDQUFyQjtBQUNBSCxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSwyQkFBYjs7QUFDQSxVQUFHRyxNQUFNLENBQUNFLEdBQVYsRUFBYztBQUNiTixRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsTUFBWjtBQUNBRyxRQUFBQSxVQUFVLEdBQUcsYUFBV0gsTUFBTSxDQUFDRyxVQUEvQjtBQUNBYixRQUFBQSxHQUFHLENBQUNLLFFBQUosQ0FBYVEsVUFBYjtBQUNBO0FBRUQsS0FURCxDQVNFLE9BQU1DLEdBQU4sRUFBVztBQUNaUixNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWU8sR0FBWjtBQUNBZCxNQUFBQSxHQUFHLENBQUNlLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFzQjtBQUNyQkMsUUFBQUEsT0FBTyxFQUFHO0FBRFcsT0FBdEI7QUFHQTtBQUNEO0FBQ0MsQ0F2Qkg7QUF3QkVDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnhCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy95ZWV1bi91cmxfc2hvcnQvc2VydmVyL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuY29uc3QgZGIgPSByZXF1aXJlKCcuLi9tb2R1bGUvZGInKTtcblxuLy91cmwgcmVkaXJlY3RcbnJvdXRlci5nZXQoJy86aWQnLCBhc3luYyAocmVxLCByZXMgLCBuZXh0KSA9PiB7XG5cdGxldCBpbnB1dCA9IHJlcS5wYXJhbXMuaWQ7XG5cdGlmKGlucHV0ID09IG51bGwpIHJlcy5yZWRpcmVjdCgnaHR0cDovL2xvY2FsaG9zdDozMDAwLycpO1xuXHRlbHNle1xuXHRcdGNvbnNvbGUubG9nKGlucHV0KTtcblx0XHR2YXIgdXJsID0gJ2xvY2FsaG9zdDo4MDgwLycgKyBpbnB1dDtcblx0XHR2YXIgcXVlcnkgPSB7J3Nob3J0X3VybCc6IHVybH07XG5cdFx0dHJ5IHtcblx0XHRcdGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLmZpbmQocXVlcnkpO1xuXHRcdFx0Y29uc29sZS5sb2coYENvbm5lY3RlZCB0byBNb25nb0RCOiBHRVRgKTtcblx0XHRcdGlmKHJlc3VsdC5faWQpe1xuXHRcdFx0XHRjb25zb2xlLmxvZyhyZXN1bHQpO1xuXHRcdFx0XHRvcmlnaW5fdXJsID0gJ2h0dHBzOi8vJytyZXN1bHQub3JpZ2luX3VybDtcblx0XHRcdFx0cmVzLnJlZGlyZWN0KG9yaWdpbl91cmwpO1xuXHRcdFx0fVxuXG5cdFx0fSBjYXRjaChlcnIpIHtcblx0XHRcdGNvbnNvbGUubG9nKGVycik7XG5cdFx0XHRyZXMuc3RhdHVzKDQwNCkuc2VuZCgge1xuXHRcdFx0XHRtZXNzYWdlIDogXCJOb3QgZm91bmRcIlxuXHRcdFx0fSlcblx0XHR9XG5cdH1cdFxuICB9KTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "db",
        "get",
        "req",
        "res",
        "next",
        "input",
        "params",
        "id",
        "redirect",
        "console",
        "log",
        "url",
        "query",
        "result",
        "find",
        "_id",
        "origin_url",
        "err",
        "status",
        "send",
        "message",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,MAAMC,EAAE,GAAGH,OAAO,CAAC,cAAD,CAAlB,C,CAEA;;;AACAC,MAAM,CAACG,GAAP,CAAW,MAAX,EAAmB,OAAOC,GAAP,EAAYC,GAAZ,EAAkBC,IAAlB,KAA2B;AAC7C,MAAIC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAWC,EAAvB;AACA,MAAGF,KAAK,IAAI,IAAZ,EAAkBF,GAAG,CAACK,QAAJ,CAAa,wBAAb,EAAlB,KACI;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,QAAIM,GAAG,GAAG,oBAAoBN,KAA9B;AACA,QAAIO,KAAK,GAAG;AAAC,mBAAaD;AAAd,KAAZ;;AACA,QAAI;AACH,YAAME,MAAM,GAAG,MAAMb,EAAE,CAACc,IAAH,CAAQF,KAAR,CAArB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAa,2BAAb;;AACA,UAAGG,MAAM,CAACE,GAAV,EAAc;AACbN,QAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACAG,QAAAA,UAAU,GAAG,aAAWH,MAAM,CAACG,UAA/B;AACAb,QAAAA,GAAG,CAACK,QAAJ,CAAaQ,UAAb;AACA;AAED,KATD,CASE,OAAMC,GAAN,EAAW;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACAd,MAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB;AACrBC,QAAAA,OAAO,EAAG;AADW,OAAtB;AAGA;AACD;AACC,CAvBH;AAwBEC,MAAM,CAACC,OAAP,GAAiBxB,MAAjB",
      "sourceRoot": "/Users/yeeun/url_short/server/src",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst db = require('../module/db');\n\n//url redirect\nrouter.get('/:id', async (req, res , next) => {\n\tlet input = req.params.id;\n\tif(input == null) res.redirect('http://localhost:3000/');\n\telse{\n\t\tconsole.log(input);\n\t\tvar url = 'localhost:8080/' + input;\n\t\tvar query = {'short_url': url};\n\t\ttry {\n\t\t\tconst result = await db.find(query);\n\t\t\tconsole.log(`Connected to MongoDB: GET`);\n\t\t\tif(result._id){\n\t\t\t\tconsole.log(result);\n\t\t\t\torigin_url = 'https://'+result.origin_url;\n\t\t\t\tres.redirect(origin_url);\n\t\t\t}\n\n\t\t} catch(err) {\n\t\t\tconsole.log(err);\n\t\t\tres.status(404).send( {\n\t\t\t\tmessage : \"Not found\"\n\t\t\t})\n\t\t}\n\t}\t\n  });\n  module.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1583773697665
  },
  "{\"sourceRoot\":\"/Users/yeeun/url_short/server/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/yeeun/url_short/server\",\"filename\":\"/Users/yeeun/url_short/server/src/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/yeeun/url_short/server\",\"plugins\":[],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/yeeun/url_short/server/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/yeeun/url_short/server",
      "filename": "/Users/yeeun/url_short/server/src/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/yeeun/url_short/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/yeeun/url_short/server/src/routes/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/yeeun/url_short/server/src/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/yeeun/url_short/server/src/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\nconst mongoURI = \"mongodb://localhost:27017/Url\"; //const mongoose = require(\"mongoose\");\n\nvar MongoClient = require('mongodb').MongoClient;\n\nconst connectOptions = {\n  keepAlive: true,\n  reconnectTries: Number.MAX_VALUE,\n  useNewUrlParser: true\n};\nvar db;\nlet domain = 'localhost:8080/'; //mongoose.Promise = global.Promise;\n//model 생성\n// let shortUrl_schema = new mongoose.Schema({\n// \torigin_url : {type: String, required: true},\n// \tshort_url : {type: String, required: true, unique : true}\n// });\n//let shortUrl = mongoose.model('shortUrl',shortUrl_schema);\n\nvar urlShort = require('./urlShort');\n\nrouter.use('/', urlShort);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwibW9uZ29VUkkiLCJNb25nb0NsaWVudCIsImNvbm5lY3RPcHRpb25zIiwia2VlcEFsaXZlIiwicmVjb25uZWN0VHJpZXMiLCJOdW1iZXIiLCJNQVhfVkFMVUUiLCJ1c2VOZXdVcmxQYXJzZXIiLCJkYiIsImRvbWFpbiIsInVybFNob3J0IiwidXNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmO0FBQ0EsTUFBTUMsUUFBUSxHQUFHLCtCQUFqQixDLENBQ0E7O0FBQ0EsSUFBSUMsV0FBVyxHQUFHSixPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CSSxXQUFyQzs7QUFDQSxNQUFNQyxjQUFjLEdBQUc7QUFDckJDLEVBQUFBLFNBQVMsRUFBRSxJQURVO0FBRXJCQyxFQUFBQSxjQUFjLEVBQUVDLE1BQU0sQ0FBQ0MsU0FGRjtBQUdyQkMsRUFBQUEsZUFBZSxFQUFFO0FBSEksQ0FBdkI7QUFLQSxJQUFJQyxFQUFKO0FBQ0EsSUFBSUMsTUFBTSxHQUFFLGlCQUFaLEMsQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJQyxRQUFRLEdBQUdiLE9BQU8sQ0FBQyxZQUFELENBQXRCOztBQUNBQyxNQUFNLENBQUNhLEdBQVAsQ0FBVyxHQUFYLEVBQWdCRCxRQUFoQjtBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJmLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy95ZWV1bi91cmxfc2hvcnQvc2VydmVyL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IG1vbmdvVVJJID0gXCJtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L1VybFwiO1xuLy9jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTtcbnZhciBNb25nb0NsaWVudCA9IHJlcXVpcmUoJ21vbmdvZGInKS5Nb25nb0NsaWVudDtcbmNvbnN0IGNvbm5lY3RPcHRpb25zID0ge1xuICBrZWVwQWxpdmU6IHRydWUsXG4gIHJlY29ubmVjdFRyaWVzOiBOdW1iZXIuTUFYX1ZBTFVFLFxuICB1c2VOZXdVcmxQYXJzZXI6IHRydWVcbn07XG52YXIgZGI7XG5sZXQgZG9tYWluPSAnbG9jYWxob3N0OjgwODAvJztcblxuLy9tb25nb29zZS5Qcm9taXNlID0gZ2xvYmFsLlByb21pc2U7XG4vL21vZGVsIOyDneyEsVxuLy8gbGV0IHNob3J0VXJsX3NjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuLy8gXHRvcmlnaW5fdXJsIDoge3R5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWV9LFxuLy8gXHRzaG9ydF91cmwgOiB7dHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSwgdW5pcXVlIDogdHJ1ZX1cbi8vIH0pO1xuLy9sZXQgc2hvcnRVcmwgPSBtb25nb29zZS5tb2RlbCgnc2hvcnRVcmwnLHNob3J0VXJsX3NjaGVtYSk7XG5cbnZhciB1cmxTaG9ydCA9IHJlcXVpcmUoJy4vdXJsU2hvcnQnKTtcbnJvdXRlci51c2UoJy8nLCB1cmxTaG9ydCk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mongoURI",
        "MongoClient",
        "connectOptions",
        "keepAlive",
        "reconnectTries",
        "Number",
        "MAX_VALUE",
        "useNewUrlParser",
        "db",
        "domain",
        "urlShort",
        "use",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AACA,MAAMC,QAAQ,GAAG,+BAAjB,C,CACA;;AACA,IAAIC,WAAW,GAAGJ,OAAO,CAAC,SAAD,CAAP,CAAmBI,WAArC;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,SAAS,EAAE,IADU;AAErBC,EAAAA,cAAc,EAAEC,MAAM,CAACC,SAFF;AAGrBC,EAAAA,eAAe,EAAE;AAHI,CAAvB;AAKA,IAAIC,EAAJ;AACA,IAAIC,MAAM,GAAE,iBAAZ,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,QAAQ,GAAGb,OAAO,CAAC,YAAD,CAAtB;;AACAC,MAAM,CAACa,GAAP,CAAW,GAAX,EAAgBD,QAAhB;AAEAE,MAAM,CAACC,OAAP,GAAiBf,MAAjB",
      "sourceRoot": "/Users/yeeun/url_short/server/src/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst mongoURI = \"mongodb://localhost:27017/Url\";\n//const mongoose = require(\"mongoose\");\nvar MongoClient = require('mongodb').MongoClient;\nconst connectOptions = {\n  keepAlive: true,\n  reconnectTries: Number.MAX_VALUE,\n  useNewUrlParser: true\n};\nvar db;\nlet domain= 'localhost:8080/';\n\n//mongoose.Promise = global.Promise;\n//model 생성\n// let shortUrl_schema = new mongoose.Schema({\n// \torigin_url : {type: String, required: true},\n// \tshort_url : {type: String, required: true, unique : true}\n// });\n//let shortUrl = mongoose.model('shortUrl',shortUrl_schema);\n\nvar urlShort = require('./urlShort');\nrouter.use('/', urlShort);\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1578546143036
  },
  "{\"sourceRoot\":\"/Users/yeeun/url_short/server/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/yeeun/url_short/server\",\"filename\":\"/Users/yeeun/url_short/server/src/routes/post.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/yeeun/url_short/server\",\"plugins\":[],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/yeeun/url_short/server/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/yeeun/url_short/server",
      "filename": "/Users/yeeun/url_short/server/src/routes/post.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/yeeun/url_short/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/yeeun/url_short/server/src/routes/post.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/yeeun/url_short/server/src/routes/post.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/yeeun/url_short/server/src/routes",
        "sourceFileName": "post.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\nrouter.post('/', (req, res) => {\n  console.log(req.body);\n  let input_url = req.body.obj;\n  console.log(input_url);\n  return res.json({\n    success: true\n  });\n}); // router.get('/:id', (req, res) => {\n//     console.log('reading post ', req.params.id);\n//     return res.json({\n//         index: req.params.id\n//     });\n// });\n\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3QuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJwb3N0IiwicmVxIiwicmVzIiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJpbnB1dF91cmwiLCJvYmoiLCJqc29uIiwic3VjY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjtBQUVBRCxNQUFNLENBQUNFLElBQVAsQ0FBWSxHQUFaLEVBQWlCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjO0FBQzlCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsR0FBRyxDQUFDSSxJQUFoQjtBQUNBLE1BQUlDLFNBQVMsR0FBR0wsR0FBRyxDQUFDSSxJQUFKLENBQVNFLEdBQXpCO0FBQ0FKLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxTQUFaO0FBQ0EsU0FBT0osR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFDWkMsSUFBQUEsT0FBTyxFQUFFO0FBREcsR0FBVCxDQUFQO0FBR0EsQ0FQRCxFLENBU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJiLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy95ZWV1bi91cmxfc2hvcnQvc2VydmVyL3NyYy9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLnBvc3QoJy8nLCAocmVxLCByZXMpID0+IHtcblx0Y29uc29sZS5sb2cocmVxLmJvZHkpO1xuXHRsZXQgaW5wdXRfdXJsID0gcmVxLmJvZHkub2JqO1xuXHRjb25zb2xlLmxvZyhpbnB1dF91cmwpO1xuXHRyZXR1cm4gcmVzLmpzb24oe1xuXHQgICAgc3VjY2VzczogdHJ1ZVxuXHR9KTtcbn0pO1xuXG4vLyByb3V0ZXIuZ2V0KCcvOmlkJywgKHJlcSwgcmVzKSA9PiB7XG4vLyAgICAgY29uc29sZS5sb2coJ3JlYWRpbmcgcG9zdCAnLCByZXEucGFyYW1zLmlkKTtcbi8vICAgICByZXR1cm4gcmVzLmpzb24oe1xuLy8gICAgICAgICBpbmRleDogcmVxLnBhcmFtcy5pZFxuLy8gICAgIH0pO1xuLy8gfSk7XG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "post.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "post",
        "req",
        "res",
        "console",
        "log",
        "body",
        "input_url",
        "obj",
        "json",
        "success",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAEAD,MAAM,CAACE,IAAP,CAAY,GAAZ,EAAiB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACA,MAAIC,SAAS,GAAGL,GAAG,CAACI,IAAJ,CAASE,GAAzB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;AACA,SAAOJ,GAAG,CAACM,IAAJ,CAAS;AACZC,IAAAA,OAAO,EAAE;AADG,GAAT,CAAP;AAGA,CAPD,E,CASA;AACA;AACA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiBb,MAAjB",
      "sourceRoot": "/Users/yeeun/url_short/server/src/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\n\nrouter.post('/', (req, res) => {\n\tconsole.log(req.body);\n\tlet input_url = req.body.obj;\n\tconsole.log(input_url);\n\treturn res.json({\n\t    success: true\n\t});\n});\n\n// router.get('/:id', (req, res) => {\n//     console.log('reading post ', req.params.id);\n//     return res.json({\n//         index: req.params.id\n//     });\n// });\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1578478001340
  },
  "{\"sourceRoot\":\"/Users/yeeun/url_short/server/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/yeeun/url_short/server\",\"filename\":\"/Users/yeeun/url_short/server/src/routes/urlRedirect.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/yeeun/url_short/server\",\"plugins\":[],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/yeeun/url_short/server/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/yeeun/url_short/server",
      "filename": "/Users/yeeun/url_short/server/src/routes/urlRedirect.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/yeeun/url_short/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/yeeun/url_short/server/src/routes/urlRedirect.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/yeeun/url_short/server/src/routes/urlRedirect.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/yeeun/url_short/server/src/routes",
        "sourceFileName": "urlRedirect.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nvar MongoClient = require('mongodb').MongoClient;\n\nconst connectOptions = {\n  keepAlive: true,\n  reconnectTries: Number.MAX_VALUE,\n  useNewUrlParser: true\n};\nvar db;\nlet domain = 'localhost:3000/'; // router.post('/', (req, res) => {\n// \tconsole.log(req.body);\n// \tlet input_url = req.body.obj;\n// \tconsole.log(input_url);\n// \treturn res.json({\n// \t    success: true\n// \t});\n// });\n\nrouter.get('/:id', async (req, res, next) => {\n  let input_url = req.params.id;\n  console.log(input_url);\n  await MongoClient.connect(mongoURI, (err, db) => {\n    if (err) {\n      console.log(err);\n      res.status(400).send({\n        message: \"error\"\n      });\n    } else {\n      console.log(`Connected to MongoDB: GET`);\n      db = db.db('Url');\n      var query = {\n        'short_url': {\n          $regex: input_url\n        }\n      };\n      db.collection('shortUrl', async function (err, collection) {\n        await collection.findOne(query).then(function (result) {\n          if (result) {\n            origin_url = result.origin_url;\n            console.log(origin_url); // res.writeHead(200, {'Content-Type': 'text/html'});\n            // res.end(origin_url);\n            // res.writeHead(302,{'Locaion': input_url});\n            // res.end();\n\n            res.redirect(input_url);\n          } else {\n            res.status(404).send({\n              message: \"Not found\"\n            });\n          }\n        });\n      });\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVybFJlZGlyZWN0LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiTW9uZ29DbGllbnQiLCJjb25uZWN0T3B0aW9ucyIsImtlZXBBbGl2ZSIsInJlY29ubmVjdFRyaWVzIiwiTnVtYmVyIiwiTUFYX1ZBTFVFIiwidXNlTmV3VXJsUGFyc2VyIiwiZGIiLCJkb21haW4iLCJnZXQiLCJyZXEiLCJyZXMiLCJuZXh0IiwiaW5wdXRfdXJsIiwicGFyYW1zIiwiaWQiLCJjb25zb2xlIiwibG9nIiwiY29ubmVjdCIsIm1vbmdvVVJJIiwiZXJyIiwic3RhdHVzIiwic2VuZCIsIm1lc3NhZ2UiLCJxdWVyeSIsIiRyZWdleCIsImNvbGxlY3Rpb24iLCJmaW5kT25lIiwidGhlbiIsInJlc3VsdCIsIm9yaWdpbl91cmwiLCJyZWRpcmVjdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFDQSxJQUFJQyxXQUFXLEdBQUdILE9BQU8sQ0FBQyxTQUFELENBQVAsQ0FBbUJHLFdBQXJDOztBQUNBLE1BQU1DLGNBQWMsR0FBRztBQUNyQkMsRUFBQUEsU0FBUyxFQUFFLElBRFU7QUFFckJDLEVBQUFBLGNBQWMsRUFBRUMsTUFBTSxDQUFDQyxTQUZGO0FBR3JCQyxFQUFBQSxlQUFlLEVBQUU7QUFISSxDQUF2QjtBQUtBLElBQUlDLEVBQUo7QUFDQSxJQUFJQyxNQUFNLEdBQUUsaUJBQVosQyxDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUFWLE1BQU0sQ0FBQ1csR0FBUCxDQUFXLE1BQVgsRUFBbUIsT0FBT0MsR0FBUCxFQUFZQyxHQUFaLEVBQWtCQyxJQUFsQixLQUEyQjtBQUM3QyxNQUFJQyxTQUFTLEdBQUdILEdBQUcsQ0FBQ0ksTUFBSixDQUFXQyxFQUEzQjtBQUNDQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUosU0FBWjtBQUNELFFBQU1iLFdBQVcsQ0FBQ2tCLE9BQVosQ0FBb0JDLFFBQXBCLEVBQThCLENBQUNDLEdBQUQsRUFBTWIsRUFBTixLQUFhO0FBQ2hELFFBQUlhLEdBQUosRUFBUTtBQUNQSixNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsR0FBWjtBQUNBVCxNQUFBQSxHQUFHLENBQUNVLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFzQjtBQUNyQkMsUUFBQUEsT0FBTyxFQUFHO0FBRFcsT0FBdEI7QUFHQSxLQUxELE1BTUk7QUFDSFAsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsMkJBQWI7QUFDQVYsTUFBQUEsRUFBRSxHQUFHQSxFQUFFLENBQUNBLEVBQUgsQ0FBTSxLQUFOLENBQUw7QUFDQSxVQUFJaUIsS0FBSyxHQUFHO0FBQUMscUJBQWE7QUFBQ0MsVUFBQUEsTUFBTSxFQUFFWjtBQUFUO0FBQWQsT0FBWjtBQUNBTixNQUFBQSxFQUFFLENBQUNtQixVQUFILENBQWMsVUFBZCxFQUEwQixnQkFBZU4sR0FBZixFQUFvQk0sVUFBcEIsRUFBZ0M7QUFDekQsY0FBTUEsVUFBVSxDQUFDQyxPQUFYLENBQW1CSCxLQUFuQixFQUEwQkksSUFBMUIsQ0FBK0IsVUFBU0MsTUFBVCxFQUFnQjtBQUNwRCxjQUFHQSxNQUFILEVBQVU7QUFDVEMsWUFBQUEsVUFBVSxHQUFHRCxNQUFNLENBQUNDLFVBQXBCO0FBQ0FkLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZYSxVQUFaLEVBRlMsQ0FHVDtBQUNBO0FBQ0E7QUFDQTs7QUFDQW5CLFlBQUFBLEdBQUcsQ0FBQ29CLFFBQUosQ0FBYWxCLFNBQWI7QUFDQSxXQVJELE1BU0k7QUFDSEYsWUFBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBc0I7QUFDckJDLGNBQUFBLE9BQU8sRUFBRztBQURXLGFBQXRCO0FBR0E7QUFDRCxTQWZLLENBQU47QUFnQkEsT0FqQkQ7QUFtQkE7QUFDRCxHQS9CSyxDQUFOO0FBaUNFLENBcENIO0FBc0NBUyxNQUFNLENBQUNDLE9BQVAsR0FBaUJuQyxNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMveWVldW4vdXJsX3Nob3J0L3NlcnZlci9zcmMvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG52YXIgTW9uZ29DbGllbnQgPSByZXF1aXJlKCdtb25nb2RiJykuTW9uZ29DbGllbnQ7XG5jb25zdCBjb25uZWN0T3B0aW9ucyA9IHtcbiAga2VlcEFsaXZlOiB0cnVlLFxuICByZWNvbm5lY3RUcmllczogTnVtYmVyLk1BWF9WQUxVRSxcbiAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlXG59O1xudmFyIGRiO1xubGV0IGRvbWFpbj0gJ2xvY2FsaG9zdDozMDAwLyc7XG5cbi8vIHJvdXRlci5wb3N0KCcvJywgKHJlcSwgcmVzKSA9PiB7XG4vLyBcdGNvbnNvbGUubG9nKHJlcS5ib2R5KTtcbi8vIFx0bGV0IGlucHV0X3VybCA9IHJlcS5ib2R5Lm9iajtcbi8vIFx0Y29uc29sZS5sb2coaW5wdXRfdXJsKTtcbi8vIFx0cmV0dXJuIHJlcy5qc29uKHtcbi8vIFx0ICAgIHN1Y2Nlc3M6IHRydWVcbi8vIFx0fSk7XG4vLyB9KTtcblxucm91dGVyLmdldCgnLzppZCcsIGFzeW5jIChyZXEsIHJlcyAsIG5leHQpID0+IHtcblx0bGV0IGlucHV0X3VybCA9IHJlcS5wYXJhbXMuaWQ7XG5cdCBjb25zb2xlLmxvZyhpbnB1dF91cmwpO1xuXHRhd2FpdCBNb25nb0NsaWVudC5jb25uZWN0KG1vbmdvVVJJLCAoZXJyLCBkYikgPT4ge1xuXHRcdGlmIChlcnIpe1xuXHRcdFx0Y29uc29sZS5sb2coZXJyKTtcblx0XHRcdHJlcy5zdGF0dXMoNDAwKS5zZW5kKCB7XG5cdFx0XHRcdG1lc3NhZ2UgOiBcImVycm9yXCJcblx0XHRcdH0pXG5cdFx0fVxuXHRcdGVsc2V7XG5cdFx0XHRjb25zb2xlLmxvZyhgQ29ubmVjdGVkIHRvIE1vbmdvREI6IEdFVGApO1xuXHRcdFx0ZGIgPSBkYi5kYignVXJsJyk7XG5cdFx0XHR2YXIgcXVlcnkgPSB7J3Nob3J0X3VybCc6IHskcmVnZXg6IGlucHV0X3VybH0gfTtcblx0XHRcdGRiLmNvbGxlY3Rpb24oJ3Nob3J0VXJsJywgYXN5bmMgZnVuY3Rpb24oZXJyLCBjb2xsZWN0aW9uKSB7XG5cdFx0XHRcdGF3YWl0IGNvbGxlY3Rpb24uZmluZE9uZShxdWVyeSkudGhlbihmdW5jdGlvbihyZXN1bHQpe1xuXHRcdFx0XHRcdGlmKHJlc3VsdCl7XG5cdFx0XHRcdFx0XHRvcmlnaW5fdXJsID0gcmVzdWx0Lm9yaWdpbl91cmw7XG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhvcmlnaW5fdXJsKTtcblx0XHRcdFx0XHRcdC8vIHJlcy53cml0ZUhlYWQoMjAwLCB7J0NvbnRlbnQtVHlwZSc6ICd0ZXh0L2h0bWwnfSk7XG5cdFx0XHRcdFx0XHQvLyByZXMuZW5kKG9yaWdpbl91cmwpO1xuXHRcdFx0XHRcdFx0Ly8gcmVzLndyaXRlSGVhZCgzMDIseydMb2NhaW9uJzogaW5wdXRfdXJsfSk7XG5cdFx0XHRcdFx0XHQvLyByZXMuZW5kKCk7XG5cdFx0XHRcdFx0XHRyZXMucmVkaXJlY3QoaW5wdXRfdXJsKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZXtcblx0XHRcdFx0XHRcdHJlcy5zdGF0dXMoNDA0KS5zZW5kKCB7XG5cdFx0XHRcdFx0XHRcdG1lc3NhZ2UgOiBcIk5vdCBmb3VuZFwiXG5cdFx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSlcblx0XHRcdH0pXG5cdFx0XHRcblx0XHR9XG5cdH0pXG5cdFxuICB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "urlRedirect.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "MongoClient",
        "connectOptions",
        "keepAlive",
        "reconnectTries",
        "Number",
        "MAX_VALUE",
        "useNewUrlParser",
        "db",
        "domain",
        "get",
        "req",
        "res",
        "next",
        "input_url",
        "params",
        "id",
        "console",
        "log",
        "connect",
        "mongoURI",
        "err",
        "status",
        "send",
        "message",
        "query",
        "$regex",
        "collection",
        "findOne",
        "then",
        "result",
        "origin_url",
        "redirect",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,IAAIC,WAAW,GAAGH,OAAO,CAAC,SAAD,CAAP,CAAmBG,WAArC;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,SAAS,EAAE,IADU;AAErBC,EAAAA,cAAc,EAAEC,MAAM,CAACC,SAFF;AAGrBC,EAAAA,eAAe,EAAE;AAHI,CAAvB;AAKA,IAAIC,EAAJ;AACA,IAAIC,MAAM,GAAE,iBAAZ,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAV,MAAM,CAACW,GAAP,CAAW,MAAX,EAAmB,OAAOC,GAAP,EAAYC,GAAZ,EAAkBC,IAAlB,KAA2B;AAC7C,MAAIC,SAAS,GAAGH,GAAG,CAACI,MAAJ,CAAWC,EAA3B;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACD,QAAMb,WAAW,CAACkB,OAAZ,CAAoBC,QAApB,EAA8B,CAACC,GAAD,EAAMb,EAAN,KAAa;AAChD,QAAIa,GAAJ,EAAQ;AACPJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAT,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB;AACrBC,QAAAA,OAAO,EAAG;AADW,OAAtB;AAGA,KALD,MAMI;AACHP,MAAAA,OAAO,CAACC,GAAR,CAAa,2BAAb;AACAV,MAAAA,EAAE,GAAGA,EAAE,CAACA,EAAH,CAAM,KAAN,CAAL;AACA,UAAIiB,KAAK,GAAG;AAAC,qBAAa;AAACC,UAAAA,MAAM,EAAEZ;AAAT;AAAd,OAAZ;AACAN,MAAAA,EAAE,CAACmB,UAAH,CAAc,UAAd,EAA0B,gBAAeN,GAAf,EAAoBM,UAApB,EAAgC;AACzD,cAAMA,UAAU,CAACC,OAAX,CAAmBH,KAAnB,EAA0BI,IAA1B,CAA+B,UAASC,MAAT,EAAgB;AACpD,cAAGA,MAAH,EAAU;AACTC,YAAAA,UAAU,GAAGD,MAAM,CAACC,UAApB;AACAd,YAAAA,OAAO,CAACC,GAAR,CAAYa,UAAZ,EAFS,CAGT;AACA;AACA;AACA;;AACAnB,YAAAA,GAAG,CAACoB,QAAJ,CAAalB,SAAb;AACA,WARD,MASI;AACHF,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAsB;AACrBC,cAAAA,OAAO,EAAG;AADW,aAAtB;AAGA;AACD,SAfK,CAAN;AAgBA,OAjBD;AAmBA;AACD,GA/BK,CAAN;AAiCE,CApCH;AAsCAS,MAAM,CAACC,OAAP,GAAiBnC,MAAjB",
      "sourceRoot": "/Users/yeeun/url_short/server/src/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nvar MongoClient = require('mongodb').MongoClient;\nconst connectOptions = {\n  keepAlive: true,\n  reconnectTries: Number.MAX_VALUE,\n  useNewUrlParser: true\n};\nvar db;\nlet domain= 'localhost:3000/';\n\n// router.post('/', (req, res) => {\n// \tconsole.log(req.body);\n// \tlet input_url = req.body.obj;\n// \tconsole.log(input_url);\n// \treturn res.json({\n// \t    success: true\n// \t});\n// });\n\nrouter.get('/:id', async (req, res , next) => {\n\tlet input_url = req.params.id;\n\t console.log(input_url);\n\tawait MongoClient.connect(mongoURI, (err, db) => {\n\t\tif (err){\n\t\t\tconsole.log(err);\n\t\t\tres.status(400).send( {\n\t\t\t\tmessage : \"error\"\n\t\t\t})\n\t\t}\n\t\telse{\n\t\t\tconsole.log(`Connected to MongoDB: GET`);\n\t\t\tdb = db.db('Url');\n\t\t\tvar query = {'short_url': {$regex: input_url} };\n\t\t\tdb.collection('shortUrl', async function(err, collection) {\n\t\t\t\tawait collection.findOne(query).then(function(result){\n\t\t\t\t\tif(result){\n\t\t\t\t\t\torigin_url = result.origin_url;\n\t\t\t\t\t\tconsole.log(origin_url);\n\t\t\t\t\t\t// res.writeHead(200, {'Content-Type': 'text/html'});\n\t\t\t\t\t\t// res.end(origin_url);\n\t\t\t\t\t\t// res.writeHead(302,{'Locaion': input_url});\n\t\t\t\t\t\t// res.end();\n\t\t\t\t\t\tres.redirect(input_url);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tres.status(404).send( {\n\t\t\t\t\t\t\tmessage : \"Not found\"\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t\t\n\t\t}\n\t})\n\t\n  });\n\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1578535566482
  },
  "{\"sourceRoot\":\"/Users/yeeun/url_short/server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/yeeun/url_short/server\",\"filename\":\"/Users/yeeun/url_short/server/src/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/yeeun/url_short/server\",\"plugins\":[],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/yeeun/url_short/server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/yeeun/url_short/server",
      "filename": "/Users/yeeun/url_short/server/src/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/yeeun/url_short/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/yeeun/url_short/server/src/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/yeeun/url_short/server/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/yeeun/url_short/server/src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst bodyParser = require(\"body-parser\");\n\nvar cookieParser = require('cookie-parser');\n\nvar path = require('path');\n\nvar logger = require('morgan'); // LOAD API FROM ROUTES\n\n\nconst app = express();\nlet port = 8080;\n\nvar urlShort = require('./routes/urlShort');\n\nvar index = require('./main'); // SETUP MIDDLEWARE\n\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use('/urlShort', urlShort); // url shortening\n\napp.use('/', index); // url redirect \n// catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  next(createError(404));\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500);\n  res.json({\n    error: err\n  });\n});\napp.listen(port, () => {\n  console.log('Express is listening on port', port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJjb29raWVQYXJzZXIiLCJwYXRoIiwibG9nZ2VyIiwiYXBwIiwicG9ydCIsInVybFNob3J0IiwiaW5kZXgiLCJ1c2UiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwic3RhdGljIiwiam9pbiIsIl9fZGlybmFtZSIsInJlcSIsInJlcyIsIm5leHQiLCJjcmVhdGVFcnJvciIsImVyciIsImxvY2FscyIsIm1lc3NhZ2UiLCJlcnJvciIsImdldCIsInN0YXR1cyIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFDQSxJQUFJRSxZQUFZLEdBQUdGLE9BQU8sQ0FBQyxlQUFELENBQTFCOztBQUNBLElBQUlHLElBQUksR0FBR0gsT0FBTyxDQUFDLE1BQUQsQ0FBbEI7O0FBQ0EsSUFBSUksTUFBTSxHQUFHSixPQUFPLENBQUMsUUFBRCxDQUFwQixDLENBR0E7OztBQUNBLE1BQU1LLEdBQUcsR0FBR04sT0FBTyxFQUFuQjtBQUNBLElBQUlPLElBQUksR0FBRyxJQUFYOztBQUNBLElBQUlDLFFBQVEsR0FBR1AsT0FBTyxDQUFDLG1CQUFELENBQXRCOztBQUNBLElBQUlRLEtBQUssR0FBR1IsT0FBTyxDQUFDLFFBQUQsQ0FBbkIsQyxDQUVBOzs7QUFDQUssR0FBRyxDQUFDSSxHQUFKLENBQVFMLE1BQU0sQ0FBQyxLQUFELENBQWQ7QUFDQUMsR0FBRyxDQUFDSSxHQUFKLENBQVFWLE9BQU8sQ0FBQ1csSUFBUixFQUFSO0FBQ0FMLEdBQUcsQ0FBQ0ksR0FBSixDQUFRVixPQUFPLENBQUNZLFVBQVIsQ0FBbUI7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBbkIsQ0FBUjtBQUNBUCxHQUFHLENBQUNJLEdBQUosQ0FBUVAsWUFBWSxFQUFwQjtBQUNBRyxHQUFHLENBQUNJLEdBQUosQ0FBUVYsT0FBTyxDQUFDYyxNQUFSLENBQWVWLElBQUksQ0FBQ1csSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFFBQXJCLENBQWYsQ0FBUjtBQUVBVixHQUFHLENBQUNJLEdBQUosQ0FBUSxXQUFSLEVBQW9CRixRQUFwQixFLENBQStCOztBQUMvQkYsR0FBRyxDQUFDSSxHQUFKLENBQVEsR0FBUixFQUFhRCxLQUFiLEUsQ0FBcUI7QUFFckI7O0FBQ0FILEdBQUcsQ0FBQ0ksR0FBSixDQUFRLFVBQVNPLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDL0JBLEVBQUFBLElBQUksQ0FBQ0MsV0FBVyxDQUFDLEdBQUQsQ0FBWixDQUFKO0FBQ0QsQ0FGRCxFLENBSUE7O0FBQ0FkLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLFVBQVNXLEdBQVQsRUFBY0osR0FBZCxFQUFtQkMsR0FBbkIsRUFBd0JDLElBQXhCLEVBQThCO0FBQ3BDO0FBQ0FELEVBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXQyxPQUFYLEdBQXFCRixHQUFHLENBQUNFLE9BQXpCO0FBQ0FMLEVBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXRSxLQUFYLEdBQW1CUCxHQUFHLENBQUNYLEdBQUosQ0FBUW1CLEdBQVIsQ0FBWSxLQUFaLE1BQXVCLGFBQXZCLEdBQXVDSixHQUF2QyxHQUE2QyxFQUFoRSxDQUhvQyxDQUtwQzs7QUFDQUgsRUFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVdMLEdBQUcsQ0FBQ0ssTUFBSixJQUFjLEdBQXpCO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1AsSUFBSixDQUFTO0FBQUVhLElBQUFBLEtBQUssRUFBRUg7QUFBVCxHQUFUO0FBQ0QsQ0FSRDtBQVdBZixHQUFHLENBQUNxQixNQUFKLENBQVdwQixJQUFYLEVBQWlCLE1BQU07QUFDbkJxQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSw4QkFBWixFQUE0Q3RCLElBQTVDO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMveWVldW4vdXJsX3Nob3J0L3NlcnZlci9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZShcImJvZHktcGFyc2VyXCIpO1xudmFyIGNvb2tpZVBhcnNlciA9IHJlcXVpcmUoJ2Nvb2tpZS1wYXJzZXInKTtcbnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xudmFyIGxvZ2dlciA9IHJlcXVpcmUoJ21vcmdhbicpO1xuXG5cbi8vIExPQUQgQVBJIEZST00gUk9VVEVTXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5sZXQgcG9ydCA9IDgwODA7XG52YXIgdXJsU2hvcnQgPSByZXF1aXJlKCcuL3JvdXRlcy91cmxTaG9ydCcpO1xudmFyIGluZGV4ID0gcmVxdWlyZSgnLi9tYWluJyk7XG5cbi8vIFNFVFVQIE1JRERMRVdBUkVcbmFwcC51c2UobG9nZ2VyKCdkZXYnKSk7XG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcbmFwcC51c2UoY29va2llUGFyc2VyKCkpO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAncHVibGljJykpKTtcblxuYXBwLnVzZSgnL3VybFNob3J0Jyx1cmxTaG9ydCk7IC8vIHVybCBzaG9ydGVuaW5nXG5hcHAudXNlKCcvJywgaW5kZXgpOyAvLyB1cmwgcmVkaXJlY3QgXG5cbi8vIGNhdGNoIDQwNCBhbmQgZm9yd2FyZCB0byBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIG5leHQoY3JlYXRlRXJyb3IoNDA0KSk7XG59KTtcblxuLy8gZXJyb3IgaGFuZGxlclxuYXBwLnVzZShmdW5jdGlvbihlcnIsIHJlcSwgcmVzLCBuZXh0KSB7XG4gIC8vIHNldCBsb2NhbHMsIG9ubHkgcHJvdmlkaW5nIGVycm9yIGluIGRldmVsb3BtZW50XG4gIHJlcy5sb2NhbHMubWVzc2FnZSA9IGVyci5tZXNzYWdlO1xuICByZXMubG9jYWxzLmVycm9yID0gcmVxLmFwcC5nZXQoJ2VudicpID09PSAnZGV2ZWxvcG1lbnQnID8gZXJyIDoge307XG5cbiAgLy8gcmVuZGVyIHRoZSBlcnJvciBwYWdlXG4gIHJlcy5zdGF0dXMoZXJyLnN0YXR1cyB8fCA1MDApO1xuICByZXMuanNvbih7IGVycm9yOiBlcnIgfSk7XG59KTtcblxuXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnRXhwcmVzcyBpcyBsaXN0ZW5pbmcgb24gcG9ydCcsIHBvcnQpO1xufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "cookieParser",
        "path",
        "logger",
        "app",
        "port",
        "urlShort",
        "index",
        "use",
        "json",
        "urlencoded",
        "extended",
        "static",
        "join",
        "__dirname",
        "req",
        "res",
        "next",
        "createError",
        "err",
        "locals",
        "message",
        "error",
        "get",
        "status",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAApB,C,CAGA;;;AACA,MAAMK,GAAG,GAAGN,OAAO,EAAnB;AACA,IAAIO,IAAI,GAAG,IAAX;;AACA,IAAIC,QAAQ,GAAGP,OAAO,CAAC,mBAAD,CAAtB;;AACA,IAAIQ,KAAK,GAAGR,OAAO,CAAC,QAAD,CAAnB,C,CAEA;;;AACAK,GAAG,CAACI,GAAJ,CAAQL,MAAM,CAAC,KAAD,CAAd;AACAC,GAAG,CAACI,GAAJ,CAAQV,OAAO,CAACW,IAAR,EAAR;AACAL,GAAG,CAACI,GAAJ,CAAQV,OAAO,CAACY,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQP,YAAY,EAApB;AACAG,GAAG,CAACI,GAAJ,CAAQV,OAAO,CAACc,MAAR,CAAeV,IAAI,CAACW,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AAEAV,GAAG,CAACI,GAAJ,CAAQ,WAAR,EAAoBF,QAApB,E,CAA+B;;AAC/BF,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaD,KAAb,E,CAAqB;AAErB;;AACAH,GAAG,CAACI,GAAJ,CAAQ,UAASO,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,CAACC,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD,E,CAIA;;AACAd,GAAG,CAACI,GAAJ,CAAQ,UAASW,GAAT,EAAcJ,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACI,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAL,EAAAA,GAAG,CAACI,MAAJ,CAAWE,KAAX,GAAmBP,GAAG,CAACX,GAAJ,CAAQmB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAH,EAAAA,GAAG,CAACQ,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAR,EAAAA,GAAG,CAACP,IAAJ,CAAS;AAAEa,IAAAA,KAAK,EAAEH;AAAT,GAAT;AACD,CARD;AAWAf,GAAG,CAACqB,MAAJ,CAAWpB,IAAX,EAAiB,MAAM;AACnBqB,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CtB,IAA5C;AACH,CAFD",
      "sourceRoot": "/Users/yeeun/url_short/server/src",
      "sourcesContent": [
        "const express = require(\"express\");\nconst bodyParser = require(\"body-parser\");\nvar cookieParser = require('cookie-parser');\nvar path = require('path');\nvar logger = require('morgan');\n\n\n// LOAD API FROM ROUTES\nconst app = express();\nlet port = 8080;\nvar urlShort = require('./routes/urlShort');\nvar index = require('./main');\n\n// SETUP MIDDLEWARE\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/urlShort',urlShort); // url shortening\napp.use('/', index); // url redirect \n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.json({ error: err });\n});\n\n\napp.listen(port, () => {\n    console.log('Express is listening on port', port);\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1583773657579
  },
  "{\"sourceRoot\":\"/Users/yeeun/url_short/server/src/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/yeeun/url_short/server\",\"filename\":\"/Users/yeeun/url_short/server/src/routes/urlShort.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/yeeun/url_short/server\",\"plugins\":[],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/yeeun/url_short/server/src/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/yeeun/url_short/server",
      "filename": "/Users/yeeun/url_short/server/src/routes/urlShort.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/yeeun/url_short/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/yeeun/url_short/server/src/routes/urlShort.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/yeeun/url_short/server/src/routes/urlShort.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/yeeun/url_short/server/src/routes",
        "sourceFileName": "urlShort.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst db = require('../../module/db');\n\nlet domain = 'localhost:8080/'; // url - shortening\n\nrouter.post('/', async (req, res) => {\n  let input_url = req.body.obj;\n  console.log(input_url);\n\n  try {\n    // 공백 제거 \n    if (input_url != null) input_url = input_url.replace(/(\\s*)/g, \"\");\n    const query = {\n      $or: [{\n        'origin_url': {\n          $eq: input_url\n        }\n      }, {\n        'short_url': {\n          $eq: input_url\n        }\n      }]\n    };\n    const result = await db.find(query);\n    console.log(result); // 이미 존재할 경우 \n\n    if (result._id) {\n      return res.json({\n        shortUrl: result.short_url\n      });\n    }\n\n    if (result == null) {\n      let insert_url = {\n        'origin_url': input_url,\n        'short_url': \"\"\n      }; // db insert 후 url - shortening 시행\n\n      const result = await db.insert(insert_url);\n\n      var id = result.ops[0]._id.toString(),\n          ctr = 18;\n\n      var id_num = parseInt(id.slice(ctr, ctr += 6), 16);\n      var short_id = ShortURL.encode(id_num);\n      var short_url = domain.concat(short_id);\n      query = {\n        'origin_url': input_url\n      }, {\n        $set: {\n          'short_url': short_url\n        }\n      };\n      result = await db.update(query);\n      console.log(result);\n    }\n  } catch (err) {\n    res.status(400).send({\n      message: \"error\"\n    });\n  }\n}); //url 인코딩 디코딩하기 \n\nvar ShortURL = new function () {\n  var _alphabet = '23456789bcdfghjkmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ-_';\n  var _base = _alphabet.length;\n\n  this.encode = function (num) {\n    var str = '';\n\n    while (num > 0) {\n      str = _alphabet.charAt(num % _base) + str;\n      num = Math.floor(num / _base);\n    }\n\n    return str;\n  };\n\n  this.decode = function (str) {\n    var num = 0;\n\n    for (var i = 0; i < str.length; i++) {\n      num = num * _base + _alphabet.indexOf(str.charAt(i));\n    }\n\n    return str;\n  };\n}();\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVybFNob3J0LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZGIiLCJkb21haW4iLCJwb3N0IiwicmVxIiwicmVzIiwiaW5wdXRfdXJsIiwiYm9keSIsIm9iaiIsImNvbnNvbGUiLCJsb2ciLCJyZXBsYWNlIiwicXVlcnkiLCIkb3IiLCIkZXEiLCJyZXN1bHQiLCJmaW5kIiwiX2lkIiwianNvbiIsInNob3J0VXJsIiwic2hvcnRfdXJsIiwiaW5zZXJ0X3VybCIsImluc2VydCIsImlkIiwib3BzIiwidG9TdHJpbmciLCJjdHIiLCJpZF9udW0iLCJwYXJzZUludCIsInNsaWNlIiwic2hvcnRfaWQiLCJTaG9ydFVSTCIsImVuY29kZSIsImNvbmNhdCIsIiRzZXQiLCJ1cGRhdGUiLCJlcnIiLCJzdGF0dXMiLCJzZW5kIiwibWVzc2FnZSIsIl9hbHBoYWJldCIsIl9iYXNlIiwibGVuZ3RoIiwibnVtIiwic3RyIiwiY2hhckF0IiwiTWF0aCIsImZsb29yIiwiZGVjb2RlIiwiaSIsImluZGV4T2YiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7O0FBQ0EsTUFBTUMsRUFBRSxHQUFHSCxPQUFPLENBQUMsaUJBQUQsQ0FBbEI7O0FBQ0EsSUFBSUksTUFBTSxHQUFFLGlCQUFaLEMsQ0FFQTs7QUFDQUgsTUFBTSxDQUFDSSxJQUFQLENBQVksR0FBWixFQUFpQixPQUFPQyxHQUFQLEVBQVlDLEdBQVosS0FBb0I7QUFDakMsTUFBSUMsU0FBUyxHQUFHRixHQUFHLENBQUNHLElBQUosQ0FBU0MsR0FBekI7QUFDQUMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlKLFNBQVo7O0FBQ0EsTUFBSTtBQUNBO0FBQ0EsUUFBR0EsU0FBUyxJQUFJLElBQWhCLEVBQXNC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RixNQUF4QixFQUFnQ08sQ0FBQyxFQUFqQyxFQUFxQztBQUNwQ04sTUFBQUEsR0FBRyxHQUFHQSxHQUFHLEdBQUdGLEtBQU4sR0FBY0QsU0FBUyxDQUFDVSxPQUFWLENBQWtCTixHQUFHLENBQUNDLE1BQUosQ0FBV0ksQ0FBWCxDQUFsQixDQUFwQjtBQUNBOztBQUNELFdBQU9MLEdBQVA7QUFDRyxHQU5KO0FBT0EsQ0FwQmMsRUFBZjtBQXFCQU8sTUFBTSxDQUFDQyxPQUFQLEdBQWlCckQsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3llZXVuL3VybF9zaG9ydC9zZXJ2ZXIvc3JjL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuY29uc3QgZGIgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGUvZGInKTtcbmxldCBkb21haW49ICdsb2NhbGhvc3Q6ODA4MC8nO1xuXG4vLyB1cmwgLSBzaG9ydGVuaW5nXG5yb3V0ZXIucG9zdCgnLycsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGxldCBpbnB1dF91cmwgPSByZXEuYm9keS5vYmo7XG4gICAgY29uc29sZS5sb2coaW5wdXRfdXJsKTtcbiAgICB0cnkge1xuICAgICAgICAvLyDqs7XrsLEg7KCc6rGwIFxuICAgICAgICBpZihpbnB1dF91cmwgIT0gbnVsbCkgaW5wdXRfdXJsID0gaW5wdXRfdXJsLnJlcGxhY2UoLyhcXHMqKS9nLCBcIlwiKTtcbiAgICAgICAgY29uc3QgcXVlcnkgPSB7JG9yOiBbeyAnb3JpZ2luX3VybCc6IHskZXE6IGlucHV0X3VybH0gfSwgeyAnc2hvcnRfdXJsJzogeyRlcTogaW5wdXRfdXJsfSB9XX07XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLmZpbmQocXVlcnkpO1xuICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAgICAvLyDsnbTrr7gg7KG07J6s7ZWgIOqyveyasCBcbiAgICAgICAgaWYocmVzdWx0Ll9pZCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHtcbiAgICAgICAgICAgICAgICBzaG9ydFVybCA6IHJlc3VsdC5zaG9ydF91cmxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGlmKHJlc3VsdCA9PSBudWxsKSB7XG4gICAgICAgICAgICBsZXQgaW5zZXJ0X3VybCA9IHtcbiAgICAgICAgICAgICAgICAnb3JpZ2luX3VybCcgOiBpbnB1dF91cmwsXG4gICAgICAgICAgICAgICAgJ3Nob3J0X3VybCcgOiBcIlwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBkYiBpbnNlcnQg7ZuEIHVybCAtIHNob3J0ZW5pbmcg7Iuc7ZaJXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYi5pbnNlcnQoaW5zZXJ0X3VybCk7XG4gICAgICAgICAgICB2YXIgaWQgPSByZXN1bHQub3BzWzBdLl9pZC50b1N0cmluZygpLCBjdHIgPSAxODtcbiAgICAgICAgICAgIHZhciBpZF9udW0gPSBwYXJzZUludChpZC5zbGljZShjdHIsIChjdHIrPTYpKSwgMTYpO1xuICAgICAgICAgICAgdmFyIHNob3J0X2lkID0gU2hvcnRVUkwuZW5jb2RlKGlkX251bSk7XG4gICAgICAgICAgICB2YXIgc2hvcnRfdXJsID0gZG9tYWluLmNvbmNhdChzaG9ydF9pZCk7XG5cbiAgICAgICAgICAgIHF1ZXJ5ID0geydvcmlnaW5fdXJsJzogaW5wdXRfdXJsfSwgeyRzZXQ6IHsnc2hvcnRfdXJsJzogc2hvcnRfdXJsfX07XG4gICAgICAgICAgICByZXN1bHQgPSBhd2FpdCBkYi51cGRhdGUocXVlcnkpO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgICAgfVxuXG4gICAgfSBjYXRjaChlcnIpIHtcbiAgICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoIHtcbiAgICAgICAgICAgIG1lc3NhZ2UgOiBcImVycm9yXCJcbiAgICAgICAgfSlcbiAgICB9XG5cdFxufSk7XG4vL3VybCDsnbjsvZTrlKkg65SU7L2U65Sp7ZWY6riwIFxudmFyIFNob3J0VVJMID0gbmV3IGZ1bmN0aW9uKCkge1xuXHR2YXIgX2FscGhhYmV0ID0gJzIzNDU2Nzg5YmNkZmdoamttbnBxcnN0dnd4eXpCQ0RGR0hKS0xNTlBRUlNUVldYWVotXyc7XG5cdHZhciBfYmFzZSA9IF9hbHBoYWJldC5sZW5ndGg7XG5cblx0dGhpcy5lbmNvZGUgPSBmdW5jdGlvbihudW0pIHtcblx0XHR2YXIgc3RyID0gJyc7XG5cdFx0d2hpbGUgKG51bSA+IDApIHtcblx0XHRcdHN0ciA9IF9hbHBoYWJldC5jaGFyQXQobnVtICUgX2Jhc2UpICsgc3RyO1xuXHRcdFx0bnVtID0gTWF0aC5mbG9vcihudW0gLyBfYmFzZSk7XG5cdFx0fVxuXHRcdHJldHVybiBzdHI7XG5cdH07XG5cblx0dGhpcy5kZWNvZGUgPSBmdW5jdGlvbihzdHIpIHtcblx0XHR2YXIgbnVtID0gMDtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuXHRcdFx0bnVtID0gbnVtICogX2Jhc2UgKyBfYWxwaGFiZXQuaW5kZXhPZihzdHIuY2hhckF0KGkpKTtcblx0XHR9XG5cdFx0cmV0dXJuIHN0cjtcbiAgICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "urlShort.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "db",
        "domain",
        "post",
        "req",
        "res",
        "input_url",
        "body",
        "obj",
        "console",
        "log",
        "replace",
        "query",
        "$or",
        "$eq",
        "result",
        "find",
        "_id",
        "json",
        "shortUrl",
        "short_url",
        "insert_url",
        "insert",
        "id",
        "ops",
        "toString",
        "ctr",
        "id_num",
        "parseInt",
        "slice",
        "short_id",
        "ShortURL",
        "encode",
        "concat",
        "$set",
        "update",
        "err",
        "status",
        "send",
        "message",
        "_alphabet",
        "_base",
        "length",
        "num",
        "str",
        "charAt",
        "Math",
        "floor",
        "decode",
        "i",
        "indexOf",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/yeeun/url_short/server/src/routes",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst db = require('../../module/db');\nlet domain= 'localhost:8080/';\n\n// url - shortening\nrouter.post('/', async (req, res) => {\n    let input_url = req.body.obj;\n    console.log(input_url);\n    try {\n        // 공백 제거 \n        if(input_url != null) input_url = input_url.replace(/(\\s*)/g, \"\");\n        const query = {$or: [{ 'origin_url': {$eq: input_url} }, { 'short_url': {$eq: input_url} }]};\n        const result = await db.find(query);\n        console.log(result);\n        // 이미 존재할 경우 \n        if(result._id) {\n            return res.json({\n                shortUrl : result.short_url\n            });\n        } if(result == null) {\n            let insert_url = {\n                'origin_url' : input_url,\n                'short_url' : \"\"\n            }\n            // db insert 후 url - shortening 시행\n            const result = await db.insert(insert_url);\n            var id = result.ops[0]._id.toString(), ctr = 18;\n            var id_num = parseInt(id.slice(ctr, (ctr+=6)), 16);\n            var short_id = ShortURL.encode(id_num);\n            var short_url = domain.concat(short_id);\n\n            query = {'origin_url': input_url}, {$set: {'short_url': short_url}};\n            result = await db.update(query);\n            console.log(result);\n        }\n\n    } catch(err) {\n        res.status(400).send( {\n            message : \"error\"\n        })\n    }\n\t\n});\n//url 인코딩 디코딩하기 \nvar ShortURL = new function() {\n\tvar _alphabet = '23456789bcdfghjkmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ-_';\n\tvar _base = _alphabet.length;\n\n\tthis.encode = function(num) {\n\t\tvar str = '';\n\t\twhile (num > 0) {\n\t\t\tstr = _alphabet.charAt(num % _base) + str;\n\t\t\tnum = Math.floor(num / _base);\n\t\t}\n\t\treturn str;\n\t};\n\n\tthis.decode = function(str) {\n\t\tvar num = 0;\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\tnum = num * _base + _alphabet.indexOf(str.charAt(i));\n\t\t}\n\t\treturn str;\n    };\n}\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1583775549928
  },
  "{\"sourceRoot\":\"/Users/yeeun/url_short/server/module\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/yeeun/url_short/server\",\"filename\":\"/Users/yeeun/url_short/server/module/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/yeeun/url_short/server\",\"plugins\":[],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/yeeun/url_short/server/module",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/yeeun/url_short/server",
      "filename": "/Users/yeeun/url_short/server/module/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/yeeun/url_short/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/yeeun/url_short/server/module/db.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/yeeun/url_short/server/module/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/yeeun/url_short/server/module",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "const mongoURI = \"mongodb://localhost:27017/Url\";\n\nvar MongoClient = require('mongodb').MongoClient;\n\nconst connectOptions = {\n  keepAlive: true,\n  reconnectTries: Number.MAX_VALUE,\n  useNewUrlParser: true\n};\nmodule.exports = {\n  find: async query => {\n    try {\n      var db = await MongoClient.connect(mongoURI);\n      db = db.db('Url');\n      var result = await db.collection('shortUrl').findOne(query);\n      return result;\n    } catch (err) {\n      return err;\n    }\n  },\n  insert: async query => {\n    try {\n      var db = await MongoClient.connect(mongoURI);\n      db = db.db('Url');\n      var result = await db.collection('shortUrl').insertOne(query);\n      console.log(result);\n      return result;\n    } catch (err) {\n      return err;\n    }\n  },\n  update: async query => {\n    try {\n      var db = await MongoClient.connect(mongoURI);\n      db = db.db('Url');\n      var result = await db.collection('shortUrl').updateOne(query);\n      console.log(result);\n      return result;\n    } catch (err) {\n      return err;\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbIm1vbmdvVVJJIiwiTW9uZ29DbGllbnQiLCJyZXF1aXJlIiwiY29ubmVjdE9wdGlvbnMiLCJrZWVwQWxpdmUiLCJyZWNvbm5lY3RUcmllcyIsIk51bWJlciIsIk1BWF9WQUxVRSIsInVzZU5ld1VybFBhcnNlciIsIm1vZHVsZSIsImV4cG9ydHMiLCJmaW5kIiwicXVlcnkiLCJkYiIsImNvbm5lY3QiLCJyZXN1bHQiLCJjb2xsZWN0aW9uIiwiZmluZE9uZSIsImVyciIsImluc2VydCIsImluc2VydE9uZSIsImNvbnNvbGUiLCJsb2ciLCJ1cGRhdGUiLCJ1cGRhdGVPbmUiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBRywrQkFBakI7O0FBQ0EsSUFBSUMsV0FBVyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CRCxXQUFyQzs7QUFDQSxNQUFNRSxjQUFjLEdBQUc7QUFDckJDLEVBQUFBLFNBQVMsRUFBRSxJQURVO0FBRXJCQyxFQUFBQSxjQUFjLEVBQUVDLE1BQU0sQ0FBQ0MsU0FGRjtBQUdyQkMsRUFBQUEsZUFBZSxFQUFFO0FBSEksQ0FBdkI7QUFNQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLElBQUksRUFBRSxNQUFNQyxLQUFOLElBQWdCO0FBQ2xCLFFBQUk7QUFDQSxVQUFJQyxFQUFFLEdBQUcsTUFBTVosV0FBVyxDQUFDYSxPQUFaLENBQW9CZCxRQUFwQixDQUFmO0FBQ0FhLE1BQUFBLEVBQUUsR0FBR0EsRUFBRSxDQUFDQSxFQUFILENBQU0sS0FBTixDQUFMO0FBQ0EsVUFBSUUsTUFBTSxHQUFHLE1BQU1GLEVBQUUsQ0FBQ0csVUFBSCxDQUFjLFVBQWQsRUFBMEJDLE9BQTFCLENBQWtDTCxLQUFsQyxDQUFuQjtBQUNBLGFBQU9HLE1BQVA7QUFFSCxLQU5ELENBTUUsT0FBTUcsR0FBTixFQUFXO0FBQ1QsYUFBT0EsR0FBUDtBQUNIO0FBQ0osR0FYWTtBQVliQyxFQUFBQSxNQUFNLEVBQUUsTUFBTVAsS0FBTixJQUFnQjtBQUNwQixRQUFJO0FBQ0EsVUFBSUMsRUFBRSxHQUFHLE1BQU1aLFdBQVcsQ0FBQ2EsT0FBWixDQUFvQmQsUUFBcEIsQ0FBZjtBQUNBYSxNQUFBQSxFQUFFLEdBQUdBLEVBQUUsQ0FBQ0EsRUFBSCxDQUFNLEtBQU4sQ0FBTDtBQUNBLFVBQUlFLE1BQU0sR0FBRyxNQUFNRixFQUFFLENBQUNHLFVBQUgsQ0FBYyxVQUFkLEVBQTBCSSxTQUExQixDQUFvQ1IsS0FBcEMsQ0FBbkI7QUFDQVMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlQLE1BQVo7QUFDQSxhQUFPQSxNQUFQO0FBRUgsS0FQRCxDQU9FLE9BQU1HLEdBQU4sRUFBVztBQUNULGFBQU9BLEdBQVA7QUFDSDtBQUNKLEdBdkJZO0FBd0JiSyxFQUFBQSxNQUFNLEVBQUUsTUFBTVgsS0FBTixJQUFnQjtBQUNwQixRQUFJO0FBQ0EsVUFBSUMsRUFBRSxHQUFHLE1BQU1aLFdBQVcsQ0FBQ2EsT0FBWixDQUFvQmQsUUFBcEIsQ0FBZjtBQUNBYSxNQUFBQSxFQUFFLEdBQUdBLEVBQUUsQ0FBQ0EsRUFBSCxDQUFNLEtBQU4sQ0FBTDtBQUNBLFVBQUlFLE1BQU0sR0FBRyxNQUFNRixFQUFFLENBQUNHLFVBQUgsQ0FBYyxVQUFkLEVBQTBCUSxTQUExQixDQUFvQ1osS0FBcEMsQ0FBbkI7QUFDQVMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlQLE1BQVo7QUFDQSxhQUFPQSxNQUFQO0FBRUgsS0FQRCxDQU9FLE9BQU1HLEdBQU4sRUFBVztBQUNULGFBQU9BLEdBQVA7QUFDSDtBQUNKO0FBbkNZLENBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy95ZWV1bi91cmxfc2hvcnQvc2VydmVyL21vZHVsZSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvVVJJID0gXCJtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L1VybFwiO1xudmFyIE1vbmdvQ2xpZW50ID0gcmVxdWlyZSgnbW9uZ29kYicpLk1vbmdvQ2xpZW50O1xuY29uc3QgY29ubmVjdE9wdGlvbnMgPSB7XG4gIGtlZXBBbGl2ZTogdHJ1ZSxcbiAgcmVjb25uZWN0VHJpZXM6IE51bWJlci5NQVhfVkFMVUUsXG4gIHVzZU5ld1VybFBhcnNlcjogdHJ1ZVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZmluZDogYXN5bmMocXVlcnkpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhciBkYiA9IGF3YWl0IE1vbmdvQ2xpZW50LmNvbm5lY3QobW9uZ29VUkkpO1xuICAgICAgICAgICAgZGIgPSBkYi5kYignVXJsJyk7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gYXdhaXQgZGIuY29sbGVjdGlvbignc2hvcnRVcmwnKS5maW5kT25lKHF1ZXJ5KTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG5cbiAgICAgICAgfSBjYXRjaChlcnIpIHtcbiAgICAgICAgICAgIHJldHVybiBlcnI7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIGluc2VydDogYXN5bmMocXVlcnkpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhciBkYiA9IGF3YWl0IE1vbmdvQ2xpZW50LmNvbm5lY3QobW9uZ29VUkkpO1xuICAgICAgICAgICAgZGIgPSBkYi5kYignVXJsJyk7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gYXdhaXQgZGIuY29sbGVjdGlvbignc2hvcnRVcmwnKS5pbnNlcnRPbmUocXVlcnkpO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG5cbiAgICAgICAgfSBjYXRjaChlcnIpIHtcbiAgICAgICAgICAgIHJldHVybiBlcnI7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIHVwZGF0ZTogYXN5bmMocXVlcnkpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhciBkYiA9IGF3YWl0IE1vbmdvQ2xpZW50LmNvbm5lY3QobW9uZ29VUkkpO1xuICAgICAgICAgICAgZGIgPSBkYi5kYignVXJsJyk7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gYXdhaXQgZGIuY29sbGVjdGlvbignc2hvcnRVcmwnKS51cGRhdGVPbmUocXVlcnkpO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG5cbiAgICAgICAgfSBjYXRjaChlcnIpIHtcbiAgICAgICAgICAgIHJldHVybiBlcnI7XG4gICAgICAgIH1cbiAgICB9XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "mongoURI",
        "MongoClient",
        "require",
        "connectOptions",
        "keepAlive",
        "reconnectTries",
        "Number",
        "MAX_VALUE",
        "useNewUrlParser",
        "module",
        "exports",
        "find",
        "query",
        "db",
        "connect",
        "result",
        "collection",
        "findOne",
        "err",
        "insert",
        "insertOne",
        "console",
        "log",
        "update",
        "updateOne"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAG,+BAAjB;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,WAArC;;AACA,MAAME,cAAc,GAAG;AACrBC,EAAAA,SAAS,EAAE,IADU;AAErBC,EAAAA,cAAc,EAAEC,MAAM,CAACC,SAFF;AAGrBC,EAAAA,eAAe,EAAE;AAHI,CAAvB;AAMAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,IAAI,EAAE,MAAMC,KAAN,IAAgB;AAClB,QAAI;AACA,UAAIC,EAAE,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoBd,QAApB,CAAf;AACAa,MAAAA,EAAE,GAAGA,EAAE,CAACA,EAAH,CAAM,KAAN,CAAL;AACA,UAAIE,MAAM,GAAG,MAAMF,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BC,OAA1B,CAAkCL,KAAlC,CAAnB;AACA,aAAOG,MAAP;AAEH,KAND,CAME,OAAMG,GAAN,EAAW;AACT,aAAOA,GAAP;AACH;AACJ,GAXY;AAYbC,EAAAA,MAAM,EAAE,MAAMP,KAAN,IAAgB;AACpB,QAAI;AACA,UAAIC,EAAE,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoBd,QAApB,CAAf;AACAa,MAAAA,EAAE,GAAGA,EAAE,CAACA,EAAH,CAAM,KAAN,CAAL;AACA,UAAIE,MAAM,GAAG,MAAMF,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BI,SAA1B,CAAoCR,KAApC,CAAnB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,aAAOA,MAAP;AAEH,KAPD,CAOE,OAAMG,GAAN,EAAW;AACT,aAAOA,GAAP;AACH;AACJ,GAvBY;AAwBbK,EAAAA,MAAM,EAAE,MAAMX,KAAN,IAAgB;AACpB,QAAI;AACA,UAAIC,EAAE,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoBd,QAApB,CAAf;AACAa,MAAAA,EAAE,GAAGA,EAAE,CAACA,EAAH,CAAM,KAAN,CAAL;AACA,UAAIE,MAAM,GAAG,MAAMF,EAAE,CAACG,UAAH,CAAc,UAAd,EAA0BQ,SAA1B,CAAoCZ,KAApC,CAAnB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,aAAOA,MAAP;AAEH,KAPD,CAOE,OAAMG,GAAN,EAAW;AACT,aAAOA,GAAP;AACH;AACJ;AAnCY,CAAjB",
      "sourceRoot": "/Users/yeeun/url_short/server/module",
      "sourcesContent": [
        "const mongoURI = \"mongodb://localhost:27017/Url\";\nvar MongoClient = require('mongodb').MongoClient;\nconst connectOptions = {\n  keepAlive: true,\n  reconnectTries: Number.MAX_VALUE,\n  useNewUrlParser: true\n};\n\nmodule.exports = {\n    find: async(query) => {\n        try {\n            var db = await MongoClient.connect(mongoURI);\n            db = db.db('Url');\n            var result = await db.collection('shortUrl').findOne(query);\n            return result;\n\n        } catch(err) {\n            return err;\n        }\n    },\n    insert: async(query) => {\n        try {\n            var db = await MongoClient.connect(mongoURI);\n            db = db.db('Url');\n            var result = await db.collection('shortUrl').insertOne(query);\n            console.log(result);\n            return result;\n\n        } catch(err) {\n            return err;\n        }\n    },\n    update: async(query) => {\n        try {\n            var db = await MongoClient.connect(mongoURI);\n            db = db.db('Url');\n            var result = await db.collection('shortUrl').updateOne(query);\n            console.log(result);\n            return result;\n\n        } catch(err) {\n            return err;\n        }\n    }\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1583775272733
  }
}